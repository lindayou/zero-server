syntax = "v1"
import "menu.api"
import "authority.api"
import "test.api"
info(
	title: "type title here"
	desc: "type desc here"
	author: "type author here"
	email: "type email here"
	version: "type version here"
)

//用户登录
type (
	LoginRequset {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	LoginResponse {
		Code    int64  `json:"code"`
		Message string `json:"message"`
		Token   string `json:"token"`
		Id      int    `json:"id"`
	}
)
//用户修改

type (
	EditUserRequest {
		Id           int64   `json:"id"`
		Username     string  `json:"username"`
		Phone        string  `json:"phone"`
		Email        string  `json:"email"`
		Enable       int64   `json:"enable"`
		AuthorityIds []int64 `json:"authorityIds"`
	}
	EditUserResponse {
		Message string `json:"message"`
		Code    int64  `json:"code"`
	}
)

//用户注册 验证码发送

type (
	//注册信息
	RegisterReq {
		Username string `json:"username"`
		Phone    string `json:"phone"`
		Email    string `json:"email"`
		Password string `json:"password"`
		Enabled  int64  `json:"enable"`

		AuthorityIds []int64 `json:"authorityIds"`
	}
	RegisterResp {
		Message string `json:"message"`
	}
	//验证码
	sendIdentityMesReq {
		Phone string `json:"phone"`
	}
	sendIdentityMesResp {
		Message string `json:"message"`
	}
)
//修改密码
type (
	ChangePasswordReq {
		UserId         int64  `json:"userId"`
		PriPassword    string `json:"priPassword"`
		ChangePassword string `json:"changePassword"`
	}

	ChangePasswordResp {
		Message string `json:"message"`
	}
)
//用户列表

type (
	UserListReq {
		PageNum  int64 `json:"page"`
		PageSize int64 `json:"pageSize"`
	}

	UserListResp {
		Page     int64          `json:"page"`
		PageSize int64          `json:"pageSize"`
		UserList []*UserMessage `json:"userList"`
		Total    int64          `json:"total"`
	}
	UserMessage {
		Id          int64        `json:"id"`
		Username    string       `json:"username"`
		Phone       string       `json:"phone"`
		Email       string       `json:"email"`
		CreateTime  int64        `json:"createTime"`
		UpdateTime  int64        `json:"updateTime"`
		AuthorityId int64        `json:"authorityId"`
		Enable      int          `json:"enable"`
		Uuid        string       `json:"uuid"`
		Authorities []*Authority `json:"authorities"`
	}
	Authority {
		CreateAt      int64  `json:"createAt"`
		UpdateAt      int64  `json:"updateAt"`
		AuthorityId   int64  `json:"authorityId"`
		AuthorityName string `json:"authorityName"`
		ParentId      int64  `json:"parentId"`
	}

	setUserAuthorityReq {
		AuthorityId []int64 `json:"authorityId"`
		UserId      int64   `json:"userId"`
	}
	setUserAuthorityResp {
		Message string `json:"message"`
	}
	//删除用户
	deleteUserReq {
		Id int64 `json:"id"`
	}
	deleteUserResp {
		Message string `json:"message"`
	}
)
@server(
	//	jwt: Auth
	group: user
)
service zero {
	@handler login
	post /user/login (LoginRequset) returns (LoginResponse)

	@handler register
	post /user/register(RegisterReq)returns(RegisterResp)

	@handler edit
	post /user/edit(EditUserRequest)returns(EditUserResponse)

	@handler changePass
	post /user/changePass(ChangePasswordReq)returns(ChangePasswordResp)

	@handler sendIdentityMes
	post  /user/sendIdentityMes(sendIdentityMesReq)returns(sendIdentityMesResp)
	//获取用户列表
	@handler getUserList
	post  /user/getUserList(UserListReq)returns(UserListResp)
	//设置用户权限
	@handler  setUserAuthority
	post /user/setUserAuthority(setUserAuthorityReq)returns(setUserAuthorityResp)

	//删除用户
	@handler deleteUser
	post /user/deleteUser(deleteUserReq)returns(deleteUserResp)
}