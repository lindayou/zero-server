// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	authority "zero-server/server/internal/handler/authority"
	menu "zero-server/server/internal/handler/menu"
	user "zero-server/server/internal/handler/user"
	"zero-server/server/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: user.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/edit",
				Handler: user.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/changePass",
				Handler: user.ChangePassHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/sendIdentityMes",
				Handler: user.SendIdentityMesHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/getUserList",
				Handler: user.GetUserListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/setUserAuthority",
				Handler: user.SetUserAuthorityHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/deleteUser",
				Handler: user.DeleteUserHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/menu/list",
				Handler: menu.MenuListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/menu/getMenuList",
				Handler: menu.GetMenuListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/menu/addBaseMenu",
				Handler: menu.AddBaseMenuHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/menu/deleteMenu",
				Handler: menu.DeleteMenuHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/menu/editMenu",
				Handler: menu.EditMenuHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/menu/getMenuAuthority",
				Handler: menu.GetMenuAuthorityHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/menu/addMenuAuthority",
				Handler: menu.AddMenuAuthorityHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/authority/getAuthorityList",
				Handler: authority.GetAuthorityListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/authority/createAuthority",
				Handler: authority.CreateAuthorityHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/authority/deleteAuthority",
				Handler: authority.DeleteAuthorityHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/authority/updateAuthority",
				Handler: authority.UpdateAuthorityHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/authority/setDataAuthority",
				Handler: authority.SetDataAuthorityHandler(serverCtx),
			},
		},
	)
}
